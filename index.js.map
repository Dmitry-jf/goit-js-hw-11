{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/js/main.js"],"sourcesContent":["// src/js/pixabay-api.js\nimport axios from \"axios\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"52578833-1380a7e48419fcc1cc100434d\"; \n\n/**\n * @param {string} query \n * @returns {Promise<object>} \n */\nexport function getImagesByQuery(query) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: true,\n    per_page: 40, \n  };\n\n  return axios.get(BASE_URL, { params }).then(response => {\n    return response.data;\n  });\n}\n\n\n\n","\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\"; \n\n\nconst galleryEl = document.getElementById(\"gallery\");\nconst loaderEl = document.getElementById(\"loader\");\n\n\nconst lightbox = new SimpleLightbox(\".gallery a\", {\n  captions: true,\n  captionsData: \"alt\",\n  captionDelay: 250,\n});\n\n/**\n * \n * @param {Array} images \n */\nexport function createGallery(images) {\n  if (!Array.isArray(images) || images.length === 0) return;\n\n\n  const markup = images\n    .map(img => {\n      const { webformatURL, largeImageURL, tags, likes, views, comments, downloads } = img;\n      return `\n<li class=\"photo-card\">\n  <a href=\"${largeImageURL}\" class=\"gallery-link\" aria-label=\"${tags}\">\n    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n  </a>\n  <div class=\"info\">\n    <p class=\"info-item\"><b>Likes</b><span>${likes}</span></p>\n    <p class=\"info-item\"><b>Views</b><span>${views}</span></p>\n    <p class=\"info-item\"><b>Comments</b><span>${comments}</span></p>\n    <p class=\"info-item\"><b>Downloads</b><span>${downloads}</span></p>\n  </div>\n</li>`;\n    })\n    .join(\"\");\n\n  galleryEl.insertAdjacentHTML(\"beforeend\", markup);\n\n  lightbox.refresh();\n}\n\n\nexport function clearGallery() {\n  galleryEl.innerHTML = \"\";\n}\n\nexport function showLoader() {\n  if (!loaderEl) return;\n  loaderEl.classList.add(\"is-active\");\n}\n\nexport function hideLoader() {\n  if (!loaderEl) return;\n  loaderEl.classList.remove(\"is-active\");\n}\n","\nimport { getImagesByQuery } from \"./pixabay-api.js\";\nimport { createGallery, clearGallery, showLoader, hideLoader } from \"./render-functions.js\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst formEl = document.getElementById(\"search-form\");\nconst inputEl = document.getElementById(\"search-text\");\n\nformEl.addEventListener(\"submit\", handleSearch);\n\nfunction handleSearch(event) {\n  event.preventDefault();\n\n  const query = inputEl.value.trim();\n\n  if (query === \"\") {\n    iziToast.warning({\n      title: \"Warning\",\n      message: \"Please enter a search term.\",\n      position: \"topRight\",\n    });\n\n    return;\n    \n  }\n\n  showLoader();\n  clearGallery();\n\n\n  getImagesByQuery(query)\n    .then(data => {\n      if (!data || !Array.isArray(data.hits)) {\n        throw new Error(\"Invalid response from server\");\n      }\n\n      if (data.hits.length === 0) {\n        iziToast.error({\n          message: \"Sorry, there are no images matching your search query. Please try again!\",\n          position: \"topRight\",\n        });\n        return;\n      }\n      createGallery(data.hits);\n    })\n    .catch(error => {\n      console.error(\"Error fetching images:\", error);\n      iziToast.error({\n        title: \"Error\",\n        message: \"Something went wrong while fetching images. Please try later.\",\n        position: \"topRight\",\n      });\n    })\n    .finally(() => {\n      hideLoader();\n      inputEl.value = \"\";\n    });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // ./js/main.js\n// import { getImagesByQuery } from \"./pixabay-api.js\";\n// import { createGallery, clearGallery, showLoader, hideLoader } from \"./render-functions.js\";\n\n// import iziToast from \"izitoast\";\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n// // Селектори\n// const formEl = document.getElementById(\"search-form\");\n// const inputEl = document.getElementById(\"search-text\");\n// const galleryEl = document.getElementById(\"gallery\");\n\n// // Перехоплюємо сабміт форми\n// formEl.addEventListener(\"submit\", handleSearch);\n\n// function handleSearch(event) {\n//   event.preventDefault();\n\n//   const query = inputEl.value.trim();\n\n//   if (query === \"\") {\n//     iziToast.warning({\n//       title: \"Warning\",\n//       message: \"Please enter a search term.\",\n//       position: \"topRight\",\n//     });\n//     return;\n//   }\n\n//   // Починаємо пошук: показати лоадер, очистити попередні результати\n//   showLoader();\n//   clearGallery();\n\n//   // Виконуємо HTTP-запит через модуль pixabay-api (функція повертає response.data)\n//   getImagesByQuery(query)\n//     .then(data => {\n//       // data має містити поле hits (масив)\n//       if (!data || !Array.isArray(data.hits)) {\n//         throw new Error(\"Invalid response from server\");\n//       }\n\n//       if (data.hits.length === 0) {\n//         iziToast.error({\n//           message: \"Sorry, there are no images matching your search query. Please try again!\",\n//           position: \"topRight\",\n//         });\n//         return;\n//       }\n\n//       // Є результати — додаємо їх в DOM за одну операцію\n//       createGallery(data.hits);\n\n//       // (опціонально) повідомлення про успіх\n//       // iziToast.success({\n//       //   title: \"Success\",\n//       //   message: `Found ${data.totalHits} images.`,\n//       //   position: \"topRight\",\n//       // });\n//     })\n//     .catch(error => {\n//       console.error(\"Error fetching images:\", error);\n//       iziToast.error({\n//         title: \"Error\",\n//         message: \"Something went wrong while fetching images. Please try later.\",\n//         position: \"topRight\",\n//       });\n//     })\n//     .finally(() => {\n//       // ховаємо лоадер після завершення\n//       hideLoader();\n//       // optional: очистити поле або залишити введений запит\n//       // inputEl.value = \"\";\n//     });\n// }\n\n\n\n\n"],"names":["BASE_URL","API_KEY","getImagesByQuery","query","params","axios","response","galleryEl","loaderEl","lightbox","SimpleLightbox","createGallery","images","markup","img","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","formEl","inputEl","handleSearch","event","iziToast","data","error"],"mappings":"owBAGA,MAAMA,EAAW,2BACXC,EAAU,qCAMT,SAASC,EAAiBC,EAAO,CACtC,MAAMC,EAAS,CACb,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,EACd,EAEE,OAAOE,EAAM,IAAIL,EAAU,CAAE,OAAAI,EAAQ,EAAE,KAAKE,GACnCA,EAAS,IACjB,CACH,CClBA,MAAMC,EAAY,SAAS,eAAe,SAAS,EAC7CC,EAAW,SAAS,eAAe,QAAQ,EAG3CC,EAAW,IAAIC,EAAe,aAAc,CAChD,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC,EAMM,SAASC,EAAcC,EAAQ,CACpC,GAAI,CAAC,MAAM,QAAQA,CAAM,GAAKA,EAAO,SAAW,EAAG,OAGnD,MAAMC,EAASD,EACZ,IAAIE,GAAO,CACV,KAAM,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,EAAGP,EACjF,MAAO;AAAA;AAAA,aAEAE,CAAa,sCAAsCC,CAAI;AAAA,gBACpDF,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,6CAGGC,CAAK;AAAA,6CACLC,CAAK;AAAA,gDACFC,CAAQ;AAAA,iDACPC,CAAS;AAAA;AAAA,MAG1D,CAAK,EACA,KAAK,EAAE,EAEVd,EAAU,mBAAmB,YAAaM,CAAM,EAEhDJ,EAAS,QAAO,CAClB,CAGO,SAASa,GAAe,CAC7Bf,EAAU,UAAY,EACxB,CAEO,SAASgB,GAAa,CACtBf,GACLA,EAAS,UAAU,IAAI,WAAW,CACpC,CAEO,SAASgB,GAAa,CACtBhB,GACLA,EAAS,UAAU,OAAO,WAAW,CACvC,CCnDA,MAAMiB,EAAS,SAAS,eAAe,aAAa,EAC9CC,EAAU,SAAS,eAAe,aAAa,EAErDD,EAAO,iBAAiB,SAAUE,CAAY,EAE9C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAMzB,EAAQuB,EAAQ,MAAM,KAAI,EAEhC,GAAIvB,IAAU,GAAI,CAChB0B,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8BACT,SAAU,UAChB,CAAK,EAED,MAED,CAEDN,IACAD,IAGApB,EAAiBC,CAAK,EACnB,KAAK2B,GAAQ,CACZ,GAAI,CAACA,GAAQ,CAAC,MAAM,QAAQA,EAAK,IAAI,EACnC,MAAM,IAAI,MAAM,8BAA8B,EAGhD,GAAIA,EAAK,KAAK,SAAW,EAAG,CAC1BD,EAAS,MAAM,CACb,QAAS,2EACT,SAAU,UACpB,CAAS,EACD,MACD,CACDlB,EAAcmB,EAAK,IAAI,CAC7B,CAAK,EACA,MAAMC,GAAS,CACd,QAAQ,MAAM,yBAA0BA,CAAK,EAC7CF,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gEACT,SAAU,UAClB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbL,IACAE,EAAQ,MAAQ,EACtB,CAAK,CACL"}